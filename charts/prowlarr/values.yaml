# Default values for prowlarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: lscr.io/linuxserver/prowlarr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9696
  annotations: {}
  labels: {}

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  {}
  # httpGet:
  #   path: /login/
  #   port: http
  # initialDelaySeconds: 90
  # timeoutSeconds: 5
  # periodSeconds: 10
  # successThreshold: 1
  # failureThreshold: 5

readinessProbe:
  {}
  # httpGet:
  #   path: /login/
  #   port: http
  # initialDelaySeconds: 30
  # timeoutSeconds: 5
  # periodSeconds: 10
  # successThreshold: 1
  # failureThreshold: 5

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Add additional environment variables to the container
env:
  - name: PUID
    value: "1000"
  - name: PGID
    value: "1000"
  - name: TZ
    value: "Etc/UTC"
# - name: UMASK_SET
#   value: "022" #optional

# Add additional environment variables to the container
envFrom: []
# - configMapRef:
#     name: my-config-map
# - secretRef:
#     name: my-secret

persistence:
  # storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  annotations: {}
  labels: {}

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
